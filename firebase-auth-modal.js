import { auth, db } from './firebase.js';
import {
  signInWithEmailAndPassword,
  createUserWithEmailAndPassword,
  onAuthStateChanged,
  GoogleAuthProvider,
  signInWithPopup,
  sendPasswordResetEmail
} from "https://www.gstatic.com/firebasejs/10.11.0/firebase-auth.js";

import {
  doc,
  setDoc, 
  getDoc,
  serverTimestamp
} from "https://www.gstatic.com/firebasejs/10.11.0/firebase-firestore.js";

document.addEventListener("DOMContentLoaded", () => {
  const loginBtn = document.getElementById("submit-login");
  const registerBtn = document.getElementById("submit-register");
  const loginNavBtn = document.getElementById("login-btn");
  const logoutBtn = document.getElementById("logout-btn");
  const orderLink = document.getElementById("order-history-link");

  // üîê Login
  loginBtn?.addEventListener("click", async () => {
    const email = document.getElementById("login-email").value;
    const password = document.getElementById("login-password").value;
    try {
      await signInWithEmailAndPassword(auth, email, password);
      alert("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      document.getElementById("login-modal")?.classList.add("hidden");
      window.location.href = "index.html";
    } catch (error) {
      alert("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " + error.message);
    }
  });

  // üìù Register + Save to Firestore
  registerBtn?.addEventListener("click", async () => {
    const email = document.getElementById("register-email").value;
    const password = document.getElementById("register-password").value;
    const name = document.getElementById("register-name")?.value || document.getElementById("register-firstname")?.value || "";
    const surname = document.getElementById("register-surname")?.value || document.getElementById("register-lastname")?.value || "";
    const username = document.getElementById("register-username").value;
    const phone = document.getElementById("register-phone").value;

    try {
      const userCredential = await createUserWithEmailAndPassword(auth, email, password);
      const user = userCredential.user;

      // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Firestore
      await setDoc(doc(db, "users", user.uid), {
        email: user.email,
        name: name,
        surname: surname,
        username: username,
        phone: phone,
        role: "user",
        createdAt: serverTimestamp()
      });

      alert("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      document.getElementById("register-modal")?.classList.add("hidden");
      window.location.href = "index.html";
    } catch (error) {
      alert("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + error.message);
    }
  });

  // üîÑ Toggle Login/Register
  document.getElementById("openRegister")?.addEventListener("click", () => {
    document.getElementById("login-modal")?.classList.add("hidden");
    document.getElementById("register-modal")?.classList.remove("hidden");
  });
  document.getElementById("backToLogin")?.addEventListener("click", () => {
    document.getElementById("register-modal")?.classList.add("hidden");
    document.getElementById("login-modal")?.classList.remove("hidden");
  });

  // ‚ùå Logout
  logoutBtn?.addEventListener("click", async () => {
    await auth.signOut();
    alert("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    window.location.href = "index.html";
  });

  // üëÅÔ∏è Show/Hide Login-Logout
  onAuthStateChanged(auth, (user) => {
    if (user) {
      loginNavBtn?.classList.add("hidden");
      logoutBtn?.classList.remove("hidden");
      orderLink?.classList.remove("hidden");
    } else {
      loginNavBtn?.classList.remove("hidden");
      logoutBtn?.classList.add("hidden");
      orderLink?.classList.add("hidden");
    }
  });

  // ‚ùé ‡∏õ‡∏¥‡∏î modal
  document.getElementById("close-login-modal")?.addEventListener("click", () => {
    document.getElementById("login-modal")?.classList.add("hidden");
  });
  document.getElementById("close-register-modal")?.addEventListener("click", () => {
    document.getElementById("register-modal")?.classList.add("hidden");
  });
});
// üõí Fetch and Display Products
async function fetchProducts() {
  const productsContainer = document.getElementById("products-container");
  if (!productsContainer) return; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö element ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á

  try {
    const querySnapshot = await getDocs(collection(db, "products"));
    querySnapshot.forEach((docSnap) => {
      const product = docSnap.data();
      const productElement = document.createElement("div");
      productElement.className = "product p-4 border rounded shadow mb-4";
      productElement.innerHTML = `
        <h3 class="font-bold text-lg">${product.name}</h3>
        <p class="text-sm text-gray-600">${product.category}</p>
        <p class="text-pink-600">‡∏ø${product.price}</p>
      `;
      productsContainer.appendChild(productElement);
    });
  } catch (error) {
    console.error("Error fetching products: ", error);
  }
}

// Call fetchProducts on page load
fetchProducts();

// Google Login
document.getElementById("google-login-btn")?.addEventListener("click", async () => {
  const provider = new GoogleAuthProvider();

  try {
    const result = await signInWithPopup(auth, provider);
    const user = result.user;

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Firestore ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
    const docRef = doc(db, "users", user.uid);
    const docSnap = await getDoc(docRef);

    if (!docSnap.exists()) {
      await setDoc(docRef, {
        name: user.displayName,
        email: user.email,
        role: "user",
        createdAt: serverTimestamp()
      });
    }

    alert("‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ Google ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    window.location.href = "index.html";

  } catch (error) {
    console.error("‚ùå Login Failed:", error);
    alert("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ Google ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + error.message);
  }
});

// Reset Password
document.getElementById("reset-password-link")?.addEventListener("click", async () => {
  const email = prompt("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å:");
  if (!email) return alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•");

  try {
    await sendPasswordResetEmail(auth, email);
    alert("‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß");
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
    alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ: " + error.message);
  }
});